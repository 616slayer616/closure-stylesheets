/* Generated By:JavaCC: Do not edit this line. GssParserCCConstants.java */
package com.google.common.css.compiler.ast;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GssParserCCConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SEMICOLON = 2;
  /** RegularExpression Id. */
  int COLON = 3;
  /** RegularExpression Id. */
  int DOT = 4;
  /** RegularExpression Id. */
  int ASTERISK = 5;
  /** RegularExpression Id. */
  int SLASH = 6;
  /** RegularExpression Id. */
  int MINUS = 7;
  /** RegularExpression Id. */
  int EQUALS = 8;
  /** RegularExpression Id. */
  int LEFTSQUARE = 9;
  /** RegularExpression Id. */
  int RIGHTSQUARE = 10;
  /** RegularExpression Id. */
  int LEFTROUND = 11;
  /** RegularExpression Id. */
  int RIGHTROUND = 12;
  /** RegularExpression Id. */
  int LEFTBRACE = 13;
  /** RegularExpression Id. */
  int RIGHTBRACE = 14;
  /** RegularExpression Id. */
  int COMMA = 15;
  /** RegularExpression Id. */
  int EXCL_MARK = 16;
  /** RegularExpression Id. */
  int PERCENT = 17;
  /** RegularExpression Id. */
  int PLUS = 18;
  /** RegularExpression Id. */
  int GREATER = 19;
  /** RegularExpression Id. */
  int TILDE = 20;
  /** RegularExpression Id. */
  int DOUBLE_QUOTE = 21;
  /** RegularExpression Id. */
  int SINGLE_QUOTE = 22;
  /** RegularExpression Id. */
  int AT = 23;
  /** RegularExpression Id. */
  int HASH = 24;
  /** RegularExpression Id. */
  int UNDERSCORE = 25;
  /** RegularExpression Id. */
  int AMPERSAND = 26;
  /** RegularExpression Id. */
  int CARET = 27;
  /** RegularExpression Id. */
  int DOLLAR = 28;
  /** RegularExpression Id. */
  int PIPE = 29;
  /** RegularExpression Id. */
  int AND = 30;
  /** RegularExpression Id. */
  int OR = 31;
  /** RegularExpression Id. */
  int TILDE_EQUALS = 32;
  /** RegularExpression Id. */
  int CARET_EQUALS = 33;
  /** RegularExpression Id. */
  int DOLLAR_EQUALS = 34;
  /** RegularExpression Id. */
  int ASTERISK_EQUALS = 35;
  /** RegularExpression Id. */
  int PIPE_EQUALS = 36;
  /** RegularExpression Id. */
  int CDO = 37;
  /** RegularExpression Id. */
  int CDC = 38;
  /** RegularExpression Id. */
  int HEX = 39;
  /** RegularExpression Id. */
  int HEXNUM = 40;
  /** RegularExpression Id. */
  int UNICODE = 41;
  /** RegularExpression Id. */
  int ESCAPE = 42;
  /** RegularExpression Id. */
  int DIGIT = 43;
  /** RegularExpression Id. */
  int NL1 = 44;
  /** RegularExpression Id. */
  int S = 45;
  /** RegularExpression Id. */
  int W = 46;
  /** RegularExpression Id. */
  int NL = 47;
  /** RegularExpression Id. */
  int WMINUSW = 48;
  /** RegularExpression Id. */
  int WPLUS = 49;
  /** RegularExpression Id. */
  int WGREATER = 50;
  /** RegularExpression Id. */
  int WTILDE = 51;
  /** RegularExpression Id. */
  int WDEEP = 52;
  /** RegularExpression Id. */
  int ALPHA = 53;
  /** RegularExpression Id. */
  int NONASCII = 54;
  /** RegularExpression Id. */
  int NAMESTART = 55;
  /** RegularExpression Id. */
  int NAMECHAR = 56;
  /** RegularExpression Id. */
  int NAME = 57;
  /** RegularExpression Id. */
  int NUMBER = 58;
  /** RegularExpression Id. */
  int HASH_NAME = 59;
  /** RegularExpression Id. */
  int IMPORTANT_SYM = 60;
  /** RegularExpression Id. */
  int DOUBLE_QUOTED_STRING = 61;
  /** RegularExpression Id. */
  int SINGLE_QUOTED_STRING = 62;
  /** RegularExpression Id. */
  int URI = 63;
  /** RegularExpression Id. */
  int URL = 64;
  /** RegularExpression Id. */
  int FOR_VARIABLE = 65;
  /** RegularExpression Id. */
  int IDENTIFIER = 66;
  /** RegularExpression Id. */
  int CUSTOM_PROPERTY_NAME = 67;
  /** RegularExpression Id. */
  int NOTFUNCTION = 68;
  /** RegularExpression Id. */
  int LANGFUNCTION = 69;
  /** RegularExpression Id. */
  int CALC = 70;
  /** RegularExpression Id. */
  int VARFUNCTION = 71;
  /** RegularExpression Id. */
  int UNICODE_RANGE_TEXT = 72;
  /** RegularExpression Id. */
  int UNICODE_RANGE = 73;
  /** RegularExpression Id. */
  int FUNCTION = 74;
  /** RegularExpression Id. */
  int ATLIST = 75;
  /** RegularExpression Id. */
  int WEBKITKEYFRAMES = 76;
  /** RegularExpression Id. */
  int ATRULESWITHDECLBLOCK = 77;
  /** RegularExpression Id. */
  int ATKEYWORD = 78;
  /** RegularExpression Id. */
  int BAD_TOKEN = 79;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "<token of kind 1>",
    "\";\"",
    "\":\"",
    "\".\"",
    "\"*\"",
    "\"/\"",
    "\"-\"",
    "\"=\"",
    "\"[\"",
    "\"]\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\"!\"",
    "\"%\"",
    "\"+\"",
    "\">\"",
    "\"~\"",
    "\"\\\"\"",
    "\"\\\'\"",
    "\"@\"",
    "\"#\"",
    "\"_\"",
    "\"&\"",
    "\"^\"",
    "\"$\"",
    "\"|\"",
    "<AND>",
    "<OR>",
    "<TILDE_EQUALS>",
    "<CARET_EQUALS>",
    "<DOLLAR_EQUALS>",
    "<ASTERISK_EQUALS>",
    "<PIPE_EQUALS>",
    "\"<!--\"",
    "\"-->\"",
    "<HEX>",
    "<HEXNUM>",
    "<UNICODE>",
    "<ESCAPE>",
    "<DIGIT>",
    "<NL1>",
    "<S>",
    "<W>",
    "<NL>",
    "<WMINUSW>",
    "<WPLUS>",
    "<WGREATER>",
    "<WTILDE>",
    "<WDEEP>",
    "<ALPHA>",
    "<NONASCII>",
    "<NAMESTART>",
    "<NAMECHAR>",
    "<NAME>",
    "<NUMBER>",
    "<HASH_NAME>",
    "<IMPORTANT_SYM>",
    "<DOUBLE_QUOTED_STRING>",
    "<SINGLE_QUOTED_STRING>",
    "<URI>",
    "<URL>",
    "<FOR_VARIABLE>",
    "<IDENTIFIER>",
    "<CUSTOM_PROPERTY_NAME>",
    "<NOTFUNCTION>",
    "<LANGFUNCTION>",
    "<CALC>",
    "<VARFUNCTION>",
    "<UNICODE_RANGE_TEXT>",
    "<UNICODE_RANGE>",
    "<FUNCTION>",
    "<ATLIST>",
    "<WEBKITKEYFRAMES>",
    "<ATRULESWITHDECLBLOCK>",
    "<ATKEYWORD>",
    "<BAD_TOKEN>",
  };

}
