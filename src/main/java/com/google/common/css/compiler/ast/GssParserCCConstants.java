/* Generated By:JavaCC: Do not edit this line. GssParserCCConstants.java */
package com.google.common.css.compiler.ast;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public abstract class GssParserCCConstants {

    /**
     * End of File.
     */
    protected static final int EOF = 0;
    /**
     * RegularExpression Id.
     */
    protected static final int SEMICOLON = 2;
    /**
     * RegularExpression Id.
     */
    protected static final int COLON = 3;
    /**
     * RegularExpression Id.
     */
    protected static final int DOT = 4;
    /**
     * RegularExpression Id.
     */
    protected static final int ASTERISK = 5;
    /**
     * RegularExpression Id.
     */
    protected static final int SLASH = 6;
    /**
     * RegularExpression Id.
     */
    protected static final int MINUS = 7;
    /**
     * RegularExpression Id.
     */
    protected static final int EQUALS = 8;
    /**
     * RegularExpression Id.
     */
    protected static final int LEFTSQUARE = 9;
    /**
     * RegularExpression Id.
     */
    protected static final int RIGHTSQUARE = 10;
    /**
     * RegularExpression Id.
     */
    protected static final int LEFTROUND = 11;
    /**
     * RegularExpression Id.
     */
    protected static final int RIGHTROUND = 12;
    /**
     * RegularExpression Id.
     */
    protected static final int LEFTBRACE = 13;
    /**
     * RegularExpression Id.
     */
    protected static final int RIGHTBRACE = 14;
    /**
     * RegularExpression Id.
     */
    protected static final int COMMA = 15;
    /**
     * RegularExpression Id.
     */
    protected static final int EXCL_MARK = 16;
    /**
     * RegularExpression Id.
     */
    protected static final int PERCENT = 17;
    /**
     * RegularExpression Id.
     */
    protected static final int PLUS = 18;
    /**
     * RegularExpression Id.
     */
    protected static final int GREATER = 19;
    /**
     * RegularExpression Id.
     */
    protected static final int TILDE = 20;
    /**
     * RegularExpression Id.
     */
    protected static final int DOUBLE_QUOTE = 21;
    /**
     * RegularExpression Id.
     */
    protected static final int SINGLE_QUOTE = 22;
    /**
     * RegularExpression Id.
     */
    protected static final int AT = 23;
    /**
     * RegularExpression Id.
     */
    protected static final int HASH = 24;
    /**
     * RegularExpression Id.
     */
    protected static final int UNDERSCORE = 25;
    /**
     * RegularExpression Id.
     */
    protected static final int AMPERSAND = 26;
    /**
     * RegularExpression Id.
     */
    protected static final int CARET = 27;
    /**
     * RegularExpression Id.
     */
    protected static final int DOLLAR = 28;
    /**
     * RegularExpression Id.
     */
    protected static final int PIPE = 29;
    /**
     * RegularExpression Id.
     */
    protected static final int AND = 30;
    /**
     * RegularExpression Id.
     */
    protected static final int OR = 31;
    /**
     * RegularExpression Id.
     */
    protected static final int TILDE_EQUALS = 32;
    /**
     * RegularExpression Id.
     */
    protected static final int CARET_EQUALS = 33;
    /**
     * RegularExpression Id.
     */
    protected static final int DOLLAR_EQUALS = 34;
    /**
     * RegularExpression Id.
     */
    protected static final int ASTERISK_EQUALS = 35;
    /**
     * RegularExpression Id.
     */
    protected static final int PIPE_EQUALS = 36;
    /**
     * RegularExpression Id.
     */
    protected static final int CDO = 37;
    /**
     * RegularExpression Id.
     */
    protected static final int CDC = 38;
    /**
     * RegularExpression Id.
     */
    protected static final int HEX = 39;
    /**
     * RegularExpression Id.
     */
    protected static final int HEXNUM = 40;
    /**
     * RegularExpression Id.
     */
    protected static final int UNICODE = 41;
    /**
     * RegularExpression Id.
     */
    protected static final int ESCAPE = 42;
    /**
     * RegularExpression Id.
     */
    protected static final int DIGIT = 43;
    /**
     * RegularExpression Id.
     */
    protected static final int NL1 = 44;
    /**
     * RegularExpression Id.
     */
    protected static final int S = 45;
    /**
     * RegularExpression Id.
     */
    protected static final int W = 46;
    /**
     * RegularExpression Id.
     */
    protected static final int NL = 47;
    /**
     * RegularExpression Id.
     */
    protected static final int WMINUSW = 48;
    /**
     * RegularExpression Id.
     */
    protected static final int WPLUS = 49;
    /**
     * RegularExpression Id.
     */
    protected static final int WGREATER = 50;
    /**
     * RegularExpression Id.
     */
    protected static final int WTILDE = 51;
    /**
     * RegularExpression Id.
     */
    protected static final int WDEEP = 52;
    /**
     * RegularExpression Id.
     */
    protected static final int ALPHA = 53;
    /**
     * RegularExpression Id.
     */
    protected static final int NONASCII = 54;
    /**
     * RegularExpression Id.
     */
    protected static final int NAMESTART = 55;
    /**
     * RegularExpression Id.
     */
    protected static final int NAMECHAR = 56;
    /**
     * RegularExpression Id.
     */
    protected static final int NAME = 57;
    /**
     * RegularExpression Id.
     */
    protected static final int NUMBER = 58;
    /**
     * RegularExpression Id.
     */
    protected static final int HASH_NAME = 59;
    /**
     * RegularExpression Id.
     */
    protected static final int IMPORTANT_SYM = 60;
    /**
     * RegularExpression Id.
     */
    protected static final int DOUBLE_QUOTED_STRING = 61;
    /**
     * RegularExpression Id.
     */
    protected static final int SINGLE_QUOTED_STRING = 62;
    /**
     * RegularExpression Id.
     */
    protected static final int URI = 63;
    /**
     * RegularExpression Id.
     */
    protected static final int URL = 64;
    /**
     * RegularExpression Id.
     */
    protected static final int FOR_VARIABLE = 65;
    /**
     * RegularExpression Id.
     */
    protected static final int IDENTIFIER = 66;
    /**
     * RegularExpression Id.
     */
    protected static final int CUSTOM_PROPERTY_NAME = 67;
    /**
     * RegularExpression Id.
     */
    protected static final int NOTFUNCTION = 68;
    /**
     * RegularExpression Id.
     */
    protected static final int LANGFUNCTION = 69;
    /**
     * RegularExpression Id.
     */
    protected static final int CALC = 70;
    /**
     * RegularExpression Id.
     */
    protected static final int VARFUNCTION = 71;
    /**
     * RegularExpression Id.
     */
    protected static final int UNICODE_RANGE_TEXT = 72;
    /**
     * RegularExpression Id.
     */
    protected static final int UNICODE_RANGE = 73;
    /**
     * RegularExpression Id.
     */
    protected static final int FUNCTION = 74;
    /**
     * RegularExpression Id.
     */
    protected static final int ATLIST = 75;
    /**
     * RegularExpression Id.
     */
    protected static final int WEBKITKEYFRAMES = 76;
    /**
     * RegularExpression Id.
     */
    protected static final int ATRULESWITHDECLBLOCK = 77;
    /**
     * RegularExpression Id.
     */
    protected static final int ATKEYWORD = 78;
    /**
     * RegularExpression Id.
     */
    protected static final int BAD_TOKEN = 79;

    /**
     * Lexical state.
     */
    protected static final int DEFAULT = 0;

    /**
     * Literal token values.
     */
    protected static final String[] tokenImage = {
            "<EOF>",
            "<token of kind 1>",
            "\";\"",
            "\":\"",
            "\".\"",
            "\"*\"",
            "\"/\"",
            "\"-\"",
            "\"=\"",
            "\"[\"",
            "\"]\"",
            "\"(\"",
            "\")\"",
            "\"{\"",
            "\"}\"",
            "\",\"",
            "\"!\"",
            "\"%\"",
            "\"+\"",
            "\">\"",
            "\"~\"",
            "\"\\\"\"",
            "\"\\'\"",
            "\"@\"",
            "\"#\"",
            "\"_\"",
            "\"&\"",
            "\"^\"",
            "\"$\"",
            "\"|\"",
            "<AND>",
            "<OR>",
            "<TILDE_EQUALS>",
            "<CARET_EQUALS>",
            "<DOLLAR_EQUALS>",
            "<ASTERISK_EQUALS>",
            "<PIPE_EQUALS>",
            "\"<!--\"",
            "\"-->\"",
            "<HEX>",
            "<HEXNUM>",
            "<UNICODE>",
            "<ESCAPE>",
            "<DIGIT>",
            "<NL1>",
            "<S>",
            "<W>",
            "<NL>",
            "<WMINUSW>",
            "<WPLUS>",
            "<WGREATER>",
            "<WTILDE>",
            "<WDEEP>",
            "<ALPHA>",
            "<NONASCII>",
            "<NAMESTART>",
            "<NAMECHAR>",
            "<NAME>",
            "<NUMBER>",
            "<HASH_NAME>",
            "<IMPORTANT_SYM>",
            "<DOUBLE_QUOTED_STRING>",
            "<SINGLE_QUOTED_STRING>",
            "<URI>",
            "<URL>",
            "<FOR_VARIABLE>",
            "<IDENTIFIER>",
            "<CUSTOM_PROPERTY_NAME>",
            "<NOTFUNCTION>",
            "<LANGFUNCTION>",
            "<CALC>",
            "<VARFUNCTION>",
            "<UNICODE_RANGE_TEXT>",
            "<UNICODE_RANGE>",
            "<FUNCTION>",
            "<ATLIST>",
            "<WEBKITKEYFRAMES>",
            "<ATRULESWITHDECLBLOCK>",
            "<ATKEYWORD>",
            "<BAD_TOKEN>",
    };

}
